version: '3.8'

services:
  backend:
    build: ./backend
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - PGNAME=${PGNAME}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - REDISHOST=${REDISHOST}
      - REDISPORT=${REDISPORT}
      - REDISDB=${REDISDB}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db
      - redis

  frontend:
    build: ./frontend
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://backend:8000

  db:
    image: postgres:17-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${PGNAME}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  celery:
    build: ./backend
    restart: always
    command: celery -A backend worker -l info
    volumes:
      - ./backend:/app
    environment:
      - PGNAME=${PGNAME}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - REDISHOST=${REDISHOST}
      - REDISPORT=${REDISPORT}
      - REDISDB=${REDISDB}
      - CELERYDB=${CELERYDB}
      - CELERY_BROKER_URL=redis://${REDISHOST}:${REDISPORT}/${CELERYDB}
      - CELERY_RESULT_BACKEND=redis://${REDISHOST}:${REDISPORT}/${CELERYDB}
    depends_on:
      - backend
      - redis
      - db

  celery-beat:
    build: ./backend
    restart: always
    command: celery -A backend beat -l info
    volumes:
      - ./backend:/app
    environment:
      - PGNAME=${PGNAME}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - REDISHOST=${REDISHOST}
      - REDISPORT=${REDISPORT}
      - REDISDB=${REDISDB}
      - CELERYDB=${CELERYDB}
      - CELERY_BROKER_URL=redis://${REDISHOST}:${REDISPORT}/${CELERYDB}
      - CELERY_RESULT_BACKEND=redis://${REDISHOST}:${REDISPORT}/${CELERYDB}
    depends_on:
      - backend
      - redis
      - db

volumes:
  postgres_data:
  redis_data:
